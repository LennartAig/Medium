#!/usr/bin/env python
PACKAGE = "p2g_ros_driver"
NODE_NAME = "p2g_driver_node"
PARAMS_NAME = "p2g"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ADC endpoint settings
gen.add("adc_resolution",           int_t, 0, "Number of bits for each signal sample [0:8 Bit / 1:16 Bit]. ", 1, 0, 1)
gen.add("adc_samplerate_hz",        int_t, 1, "Sampling rate at with the IF signals are captured [Hz].", )
gen.add("adc_use_post_calibration", int_t, 2, "0 : do not use post calibration, 1: use post calibration", 1, 0, 1)

# Transceiver endpoint settings
gen.add("pga_level",                int_t, 10, "Programmable gain amplification.", 7, 0, 7)

# Algorithm endpoint settings
gen.add("dsp_range_mvg_avg_length", int_t, 20, "Moving average filter length used for range.", 0, 0, 8)
gen.add("dsp_range_thresh_type",    int_t, 21, "Rang ethreshold type  [0: constant, 1: Adaptive].", 0, 0, 1)
gen.add("dsp_min_range_cm",         int_t, 22, "Minimum range below which targets are ignored [cm].", 0, 0, 4999)
gen.add("dsp_max_range_cm",         int_t, 23, "Maximum range above which targets are ignored [cm].", 5000, 1, 5000)
gen.add("dsp_min_speed_kmh",        int_t, 24, "Minimum speed below which targets are ignored  [km/h].", 0, 0, 19)
gen.add("dsp_max_speed_kmh",        int_t, 25, "Maximum speed above which targets are ignored [km/h].", 20, 1, 20)
gen.add("dsp_range_threshold",      int_t, 26, "Range FFT linear threshold below which targets are ignored.", 0, 0, 1000)
gen.add("dsp_speed_threshold",      int_t, 27, "Doppler FFT linear threshold below which targets are ignored.", 0, 0, 1000)
gen.add("dsp_adaptive_offset",      int_t, 28, "For adaptive threshold, this offset is used to be above the noise floor ", 0, 0, 1000)
gen.add("dsp_enable_tracking",      int_t, 29, "Enable / Disable tracking ", 0, 0, 1)
gen.add("dsp_num_of_tracks",        int_t, 30, "Number of active tracks.", 5, 0, 5)
gen.add("dsp_median_filter_length", int_t, 31, "Depth of median filter uzsed to smoothen the angle values ", 1, 1, 13)
gen.add("dsp_enable_mti_filter",    int_t, 32, "Enable / Disable MTI filter to remove static targets [0: off, 1: on]", 0, 0, 1)
gen.add("dsp_mti_filter_length",    int_t, 33, "Length of MTI filter in terms of frame count after which static target should be killed.", 999, 0, 999)

# Base settings
gen.add("base_num_chirps_per_frame", int_t, 40, "Number of chirps per frame.", 4, 1, 128)
gen.add("base_num_samples_per_chirp",int_t, 41, "Number of samples per chirp.", 256, 64, 256)
gen.add("base_rx_mask",              int_t, 42, "String enables the number of receiver antennas with this configuration [RX4 RX3 RX2 RX1].", 2, 1, 4)
gen.add("base_chirp_duration",       int_t, 43, "Up time of chirp ramp.", 1000, 50, 3000)

# Doppler frequency module


exit(gen.generate(PACKAGE, NODE_NAME, PARAMS_NAME))


# Make sure this file is given execution privleges
# chmod a+x cfg/Ts*.cfg
